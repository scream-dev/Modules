import logging
import re

from .. import loader, utils

logger = logging.getLogger(__name__)


@loader.tds
class AutoCommentMod(loader.Module):
    """Automatically comments under any channels you want"""

    strings = {
        "name": "AutoFheta",
        "disabled": "‚ùå Disabled",
        "enabled": "‚úÖ Enabled",
        "status_now": "üëå AutoComment was <b>{}</b>!",
        "config_status": "Are we ready to comment?",
        "config_channels": "Under which channels I should comment? (ids)",
    }

    strings_ru = {
        "disabled": "‚ùå –í—ã–∫–ª—é—á–µ–Ω",
        "enabled": "‚úÖ –í–∫–ª—é—á—ë–Ω",
        "status_now": "üëå AutoComment —Ç–µ–ø–µ—Ä—å <b>{}</b>!",
        "config_status": "–ö–æ–º–º–µ–Ω—Ç–∏–º –ª–∏ –º—ã?",
        "config_channels": "–ü–æ–¥ –∫–∞–∫–∏–º –∫–∞–Ω–∞–ª–∞–º–∏ —è –¥–æ–ª–∂–µ–Ω –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å (–∞–π–¥–∏)",
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "status",
                True,
                lambda: self.strings("config_status"),
                validator=loader.validators.Boolean(),
            ),
            loader.ConfigValue(
                "channels",
                [],
                lambda: self.strings("config_channels"),
                validator=loader.validators.Series(
                    loader.validators.Union(
                        loader.validators.Integer(),
                    )
                ),
            ),
        )

    @loader.watcher(only_messages=True, only_channels=True)
    async def watcher(self, message):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –∞–≤—Ç–æ–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        if not self.config["status"]:
            return
            
        chat = utils.get_chat_id(message)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —á–∞—Ç –≤ –∑–∞–¥–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö
        if chat not in self.config["channels"]:
            return

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–æ –≤ –º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω–æ–º —à—Ä–∏—Ñ—Ç–µ
        match = re.search(r'`([^`]+)`', message.text)
        if match:
            title = match.group(1).strip()
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
            auto_comment = f".fheta {title}"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            await self.client.send_message(
                entity=chat, message=auto_comment, comment_to=message
            )
            logger.debug(f"commented on {message.id} in {chat}")

    async def commentcmd(self, message):
        """Toggle Module <on/off>"""

        self.config["status"] = not self.config["status"]
        status = (
            self.strings("enabled")
            if self.config["status"]
            else self.strings("disabled")
        )

        await utils.answer(message, self.strings("status_now").format(status))
